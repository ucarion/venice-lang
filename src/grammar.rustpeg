use super::ast::*;

#[pub]
program -> Program =
    s:(item ** _) "\n" {
        Program { items: s }
    }

item -> Item = struct / impl

struct -> Item =
    "struct" __ name:identifier _ "{" _ attrs:(struct_attr ** (_ "," _)) _ "}" {
        Item::Struct(Struct { name: name, attrs: attrs })
    }

struct_attr -> String = identifier

impl -> Item =
    "impl" __ name:identifier _ "{" _ methods:(method ** _) _ "}" {
        Item::Impl(Impl { name: name, methods: methods })
    }

method -> Method =
    "fn" __ name:identifier "(" args:(identifier ** (_ "," _)) _ ")" _ block:block {
        Method { name: name, args: args, body: block }
    }

expr -> Expr =
    block
    / "(" e:expr ")" { e }
    / identifier_expr
    / int_literal
    / string_literal

block -> Expr =
    "{" _ exprs:(expr ** (_ ";" _)) ";"? _ "}" { Expr::Block(exprs) }

identifier_expr -> Expr =
    id:identifier { Expr::Identifier(id) }

int_literal -> Expr =
    [0-9]+ { Expr::IntLiteral(match_str.to_string()) }

string_literal -> Expr
    = "\"" (!"\"" .)* "\"" { Expr::StringLiteral(match_str.to_string()) }

identifier -> String = [a-zA-Z][a-zA-Z0-9_]* { match_str.to_string() }

_ = whitespace*
__ = whitespace+
whitespace
  = [ \n\t\u{00A0}\u{FEFF}\u{1680}\u{180E}\u{2000}-\u{200A}\u{202F}\u{205F}\u{3000}]
